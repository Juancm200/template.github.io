{"slug":"github-profile-readme","title":"Spicing Up your GitHub Profile with HTML and CSS","date":"2021-01-02T00:00:00.000Z","excerpt":"Make your GitHub profile more appealing with what you do best: code!","tags":["GitHub","Guide","SVG","Online Presence"],"html":"<p>Last year, GitHub added a new cool feature for the user profile. You can now add a README file to it, and it will show up besides your profile pic. This is great for talking a bit about yourself and what you do, putting some contact info, or simply making a cool first impression.</p>\n<h2 id=\"creating-the-repository\">Creating the Repository<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#creating-the-repository\"><span class=\"heading-link\">#</span></a></h2>\n<p>For adding this to your profile, there‚Äôs a little secret. Instead of an option in your ‚ÄúEdit Profile‚Äù settings, this is achieved by <span class=\"wrapper svelte-1sgfl7c\">creating a new repository with the same name as your GitHub username.</span></p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/github-profile-readme/repo-creation.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/github-profile-readme/repo-creation.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/github-profile-readme/repo-creation.png\" alt=\"Screenshot of GitHub repository creation\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->üéâÔ∏è Creating a new repo with the same name as your username immediatelly makes GitHub praise you for finding out this secret.<!-- HTML_TAG_END --></figcaption>\n</picture>\n<p>You can choose to initialize the repository with a README file already. After that, the content of this file will already start showing on your personal profile.</p>\n<p>The README is just a Markdown file, which may make you think initially that you can only write in stuff with GitHub‚Äôs default styling. However, when you get creative, there‚Äôs a lot more you can do. You can add images and GIFs to it, sure, but SVGs are the real heros here. By adding SVG files to the Markdown file, you enable a lot of possibilities. SVG files support HTML tags and CSS styles (including animations!)</p>\n<p>For adding HTML to the SVG, we can use the <code>&lt;foreignObject&gt;</code> tag. This is an element that can include elements from different XML namespaces. Which means that even though you‚Äôre in a SVG namespace, you can use XHTML elements and all the features it supports, including the <code>&lt;style&gt;</code> tag for adding CSS.</p>\n<p>As an example, check out the SVG file I use to add the ‚Äútags‚Äù with technologies to my profile:</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">html</div>\n\t<pre class=\"language-html\"><!-- HTML_TAG_START --><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span> <span class=\"token attr-name\">fill</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>none<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">viewBox</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0 0 300 120<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>120<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2000/svg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>foreignObject</span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>100%<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/1999/xhtml<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n        <span class=\"token selector\">.tags</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">flex-wrap</span><span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token selector\">.tag</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #E3FFFF<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 0.25em<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #0ca4a5<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #0ca4a5<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 0.75em<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 2em<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0.125em<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 0.5em<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n          <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tags<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Angular<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Vue(X)<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>JavaScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>TypeScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tags<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>(S)CSS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Building UIs<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Web Components<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tags<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Ionic<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Electron<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>.NET<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>foreignObject</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span></code><!-- HTML_TAG_END --></pre>\n</div>\n<p>From there on, the possibilities are endless. On my profile, I added my personal logo SVG and the same drawing animation used on my own website.</p>\n<figure markdown=\"1\"><p><img src=\"/images/posts/github-profile-readme/my-profile.gif\" alt=\"Animation on my GitHub Profile\"></p>\n<figcaption>Using CSS animations inside the SVG, I was able to mimic the animation on my website.</figcaption></figure>\n<p>Feel free to check out <a href=\"https://github.com/matfantinel/matfantinel\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">the source code</a> to find out how it works.</p>\n<h2 id=\"inspiration\">Inspiration<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#inspiration\"><span class=\"heading-link\">#</span></a></h2>\n<p>Some people have compiled <a href=\"https://github.com/abhisheknaiidu/awesome-github-profile-readme\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">a list of amazing examples and inspirations for your profile</a>. Some are minimalistic, others more complex, and some even get data from APIs (!). My favorite is <a href=\"https://github.com/BrunnerLivio\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">this one from Livio Brunner</a>, which definitely brings all the best things from 2000‚Äôs web.</p>","css":{"code":".wrapper.svelte-1sgfl7c{background:var(--highlight-marker-url)}\npicture.svelte-1gy5t1o.svelte-1gy5t1o{position:relative;width:100%;height:100%}picture.svelte-1gy5t1o img.svelte-1gy5t1o{width:100%;height:100%}\n.code-block.svelte-qgch0c.svelte-qgch0c{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--card-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-qgch0c pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-qgch0c pre::-webkit-scrollbar{height:8px}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-qgch0c .lang.svelte-qgch0c{position:absolute;right:0;top:-15px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em}.code-block.svelte-qgch0c .filename.svelte-qgch0c{background:inherit;border-top-left-radius:8px;border-top-right-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-15px;z-index:1}","map":null},"head":"","readingTime":"6 min read","relatedPosts":[{"slug":"web-images-modern-formats","title":"Smarter, Lighter, Better Images: A Guide to Optimization","date":"2021-01-30T00:00:00.000Z","excerpt":"Learn how to reduce page loading times and bounce rate.","tags":["Front-End","Guide","HTML","CSS","Optimization"],"html":"<p>Do you know how big the images displayed on your website are? When you open a page, the browser starts downloading a bunch of files in order to display it. Research shows that <a href=\"https://httparchive.org/reports/state-of-images\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">images are the most requested asset type</a> and take up more bandwidth than any other resource. So, making sure they are as small as they can be can greatly improve the load times for your website. (spoiler alert: mine‚Äôs become 85% faster!)</p>\n<h2 id=\"more-efficient-formats\">More efficient formats<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#more-efficient-formats\"><span class=\"heading-link\">#</span></a></h2>\n<p>For a long time, JPGs and PNGs have been our standard image formats. However, they are not optimized for the web - their quality is often unnecessarily high and the download size is too big. Over time, many new formats have appeared, but two of them have become quite notable: <a href=\"https://en.wikipedia.org/wiki/WebP\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">WebP</a> and <a href=\"https://www.lambdatest.com/blog/avif-image-format/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">AVIF</a>.</p>\n<p>WebP has been introduced in 2010, and has slowly gained adoption since then. Since 2020, <a href=\"https://caniuse.com/webp\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">WebP is now supported in all modern browsers</a>. AVIF <a href=\"https://jakearchibald.com/2020/avif-has-landed/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">was launched in 2020</a>, and its adoption has been faster. As of January 2021 it is supported by all Chromium-based browsers, and Firefox will start supporting it on version 86, scheduled to release before March.</p>\n<p><em>But how do we use those shiny new formats if not all browsers support them?</em></p>\n<p>With the HTML <code>&lt;picture&gt;</code> element, we can make the browsers do the work for us. We can declare multiple sources for the same image, and the browser will try to load them in order. If they do not support a format, they will immediatelly jump to the next one.</p>\n<p>So, what we want to do is declare those different sources in the following order:</p>\n<p>AVIF -&gt; WebP -&gt; JPG (or PNG)</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">html</div>\n\t<pre class=\"language-html\"><!-- HTML_TAG_START --><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picture</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- If this type(avif) is supported, use this src --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/avif<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-image.avif<span class=\"token punctuation\">\"</span></span> \n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token comment\">&lt;!-- Else, if this type(webp) is supported, use this src instead --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/webp<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-image.webp<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token comment\">&lt;!-- Else, fall back to jpg --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> \n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-image.jpg<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A test image<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>async<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picture</span><span class=\"token punctuation\">></span></span></code><!-- HTML_TAG_END --></pre>\n</div>\n<p>If you look at the resulting HTML in your website, you can see that the <code>&lt;img&gt;</code> element has a <code>src</code> defined, but when you hover over it, it shows what is the actual file that‚Äôs being loaded. If you‚Äôre on a supported browser, it will have loaded the AVIF file. If you‚Äôre on Safari, it will have loaded the WebP one. Otherwise, if you‚Äôre using IE or something (I‚Äôm sorry), the original JPG or PNG file will be loaded.</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/web-images-modern-formats/generated-html.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/web-images-modern-formats/generated-html.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/web-images-modern-formats/generated-html.png\" alt=\"Screenshot of the generated HTML code\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->The img tag shows the PNG file as source, but hovering the mouse over it reveals that the AVIF file is the one that actually loaded.<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h2 id=\"load-smaller-images\">Load smaller images<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#load-smaller-images\"><span class=\"heading-link\">#</span></a></h2>\n<p>You can optimize even further than that. See, in my example, I am loading an image with a width of 1200px, however, the size it‚Äôs being displayed is only 319px wide. The <code>srcset</code> property supports different widths to load, depending on the screen size.</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">html</div>\n\t<pre class=\"language-html\"><!-- HTML_TAG_START --><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picture</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- Here, we declare the widths our different files have: 380px, 640px and 960px --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/avif<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>\n      my-image-380w.avif 380w,\n      my-image-640w.avif 640w,\n      my-image-960w.avif 960w\n    <span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(max-width: 979px) 100vw, 640px<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> \n    <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>my-image.jpg<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>A test image<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> \n    <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>async<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picture</span><span class=\"token punctuation\">></span></span></code><!-- HTML_TAG_END --></pre>\n</div>\n<p>The <code>srcset</code> property is smart. As the name implies, it is a set of sources, not just a single one. When we declare multiple file paths and add a width unit besides it, the browser looks at this data and tries to display the smallest possible image.</p>\n<p>On the code snippet above, the browser will follow this: <span class=\"wrapper svelte-1sgfl7c\">If the size of the displayed image (on the page) is smaller or equal to 380px, it will load the file with 380px of width. Otherwise, it will try to load the next declared path (640px).</span></p>\n<p><strong>However,</strong> not all parts of this process are smarty. The browser cannot know what is the final size of the image on the page before it actually loads it. Which is why the <code>sizes</code> property exists. Let‚Äôs see how it works:</p>\n<p>The <code>sizes</code> property defines what rule the browser will use to get the width it uses to choose the correct file in <code>srcset</code>. The default value is <code>100vw</code>. That means that, to check what width the image will have, the browser just gets the width of the browser window. If we know the exact size the image will have on load, we can declare it here, or if we don‚Äôt know the exact size, we can estimate. We can use media queries to help us specify the sizes better as well.</p>\n<p>Check out the value on the example: <code>(max-width: 979px) 100vw, 640px</code>. What that code does is: if the width of the viewport is equal or smaller than 979px, use 100vw. Else, use 640px.</p>\n<p>It is easier to understand if we visualize it like this:</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/web-images-modern-formats/sizes.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/web-images-modern-formats/sizes.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/web-images-modern-formats/sizes.png\" alt=\"Screenshots picturing how the sizes property affects the image loading on both mobile and desktop\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->On mobile, the image width is almost the same as the viewport, so it's okay to use 100vw. On desktop, we usually limit the image width, so 640px was the sweet spot in this particular case.<!-- HTML_TAG_END --></figcaption>\n</picture>\n<p>Of course, different websites have different needs and situations. Make sure to adapt the code to your specific need. </p>\n<p>It‚Äôs also worth noting that most phones use a HiDPI mode. This means that <span class=\"wrapper svelte-1sgfl7c\">even though the reported width for the phone above is 375px, the browser will likely use a higher resolution to load the images</span> (usually 2x), in order to serve a higher quality image.</p>\n<h2 id=\"lazy-loading-and-async-decoding\">Lazy Loading and Async Decoding<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lazy-loading-and-async-decoding\"><span class=\"heading-link\">#</span></a></h2>\n<p>You might have noticed the <code>loading=&quot;lazy&quot;</code> and <code>decoding=&quot;async&quot;</code> attributes in the code above. Those are relatively new options that are part of an ongoing effort to make the web faster.</p>\n<p><code>decoding=&quot;async&quot;</code> tells your browser it can try to parallelize loading your image. When your page is loading, it tries to decode both text and images at the same time. On lower-end devices though, decoding heavy images can take a while, and this might block the rendering of the rest of the content. With this option, the browser will try to proceed rendering the rest of the content and render the image later. This can be a great improvement to perceived performance.</p>\n<p><code>loading=&quot;lazy&quot;</code> is probably the most important of the two. It is an easy way of telling the browser to <span class=\"wrapper svelte-1sgfl7c\">only load the images when they get close to appearing in the viewport</span>. There is a threshold that is defined by the browser that controls how close it needs to be before it gets loaded, so you don‚Äôt have to worry about them not showing up if the user scrolls fast. <span class=\"wrapper svelte-1sgfl7c\">This ensures that the initial load of the website is as lean as it can get, improving perceived performance and also saving you some money on server requests.</span></p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/web-images-modern-formats/first-load-requests.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/web-images-modern-formats/first-load-requests.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/web-images-modern-formats/first-load-requests.png\" alt=\"Screenshot of the image requests made on first load of my website\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->When the website is initially loaded, it only downloads what's needed: my avatar image and the preview of the first blog post, that will show up after scrolling a bit.<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/web-images-modern-formats/after-scrolling-requests.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/web-images-modern-formats/after-scrolling-requests.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/web-images-modern-formats/after-scrolling-requests.png\" alt=\"Screenshot of the image requests made after scrolling a bit\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->When I scroll down the page, the images are downloaded as they're close to appearing.<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h2 id=\"results-in-practice\">Results In Practice<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#results-in-practice\"><span class=\"heading-link\">#</span></a></h2>\n<p>Since I like using my own website and blog as a testbed for new stuff that I learn, I have applied these optimizations to it. The results were incredible!</p>\n<p>Note: after doing some tests, I have decided that the benefits of serving differently-sized images on my website were too small to justify the extra effort of handling all these extra images. So, the only optimizations I have really applied were the optimized file formats, lazy loading and async decoding. I also chose PNG as fallback type instead of JPG because some of my images have transparency in them, which JPG does not support.</p>\n<p>The following data is taken from the home page of the website, since it has a lot of images:</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/web-images-modern-formats/results.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/web-images-modern-formats/results.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/web-images-modern-formats/results.png\" alt=\"Screenshot showing the difference in download size before and after the optimizations\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n</picture>\n<span class=\"wrapper svelte-1sgfl7c\">The total download size decreased by a whopping 85%!!</span> That&#39;s an incredible difference, with no noticeable difference in quality. Your results may vary, as they depend on how much of your website&#39;s size is images.\n<p>Before the changes, out of 1.6MB total, 92% of it were images, 5% were fonts, 1% was HTML, and the remaining 2% were of JS and other things like the web manifest.</p>\n<p>Now, out of 249kB, just 24% of it are images. Fonts now make up 27% of page size, and are likely the target of a future optimization post!</p>\n<h2 id=\"the-hard-part\">The Hard Part<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#the-hard-part\"><span class=\"heading-link\">#</span></a></h2>\n<p>The hardest part of this process is converting the images to all necessary formats and sizes. It is a lot of effort to do manually even for a single image, and even worse if you‚Äôre trying to optimize existing images like I was. </p>\n<h3 id=\"generating-the-images\">Generating the Images<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#generating-the-images\"><span class=\"heading-link\">#</span></a></h3>\n<p>For my needs, I have developed a NodeJS script that uses the <a href=\"https://github.com/lovell/sharp\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Sharp</a> library to do the magic for me. It accepts as parameters a source and a target folder, input file types (what files it will look for in the source folder), output file types (what types it will convert to), as well as the desired widths.</p>\n<p>The script is at the time of writing this currently usable only via command line. I have plans to turn this into a part of the build process of my website, with a <a href=\"https://github.com/features/actions\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">GitHub Action</a>, so that I don‚Äôt have to run it manually. </p>\n<p>So, to check out how to use the script, please <a href=\"https://github.com/matfantinel/image-transmutation\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">check out its GitHub page</a> for up-to-date instructions.</p>\n<h3 id=\"using-the-images\">Using the images<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#using-the-images\"><span class=\"heading-link\">#</span></a></h3>\n<p>To make this setup work, I had to do some changes on how images were used on my website.</p>\n<p>Pre-existing conditions:</p>\n<ul><li>All the images on my website were initially in a folder called ‚Äúimages‚Äù, with various subfolders;</li>\n<li>The images I wanted to convert were all in either PNG or JPG formats;</li></ul>\n<p>Modifications I did:</p>\n<ul><li>I have created a folder called ‚Äúoptimized-images‚Äù, where all the converted images are saved automatically by my script;</li>\n<li>I have created a component to centralize all image-loading logic. With Jekyll, I just had to create an HTML file in the <code>_includes</code> folder, but how you do this might vary depending on what technology you use;</li>\n<li>This component receives as parameters: the relative file path, the filename (without file extension), and the alt text;</li></ul>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">html</div>\n\t<pre class=\"language-html\"><!-- HTML_TAG_START --><code class=\"language-html\">&#123;% assign alt = include.alt %&#125;\n&#123;% assign path = include.path %&#125;\n&#123;% assign filename = include.filename %&#125;\n<span class=\"token comment\">&lt;!-- Here I build the full path to the image, minus the extension --></span>\n<span class=\"token comment\">&lt;!-- In case the process of generating the images is automated, you can check here if it's --></span>\n<span class=\"token comment\">&lt;!-- running locally or not, and swap between /images and /optimized-images accordingly --></span>\n&#123;% assign imageSrc = '/optimized-images/' | append: path | append: '/' | append: filename %&#125;\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picture</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- And here I use that path and add the extensions inside the srcsets only --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span>\n    <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; imageSrc &#125;&#125;.avif<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/avif<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span>\n    <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; imageSrc &#125;&#125;.webp<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/webp<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; imageSrc &#125;&#125;.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;&#123; alt &#125;&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">loading</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lazy<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">decoding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>async<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picture</span><span class=\"token punctuation\">></span></span></code><!-- HTML_TAG_END --></pre>\n</div>\n<p>And to use this component inside another page:</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">liquid</div>\n\t<pre class=\"language-undefined\"><!-- HTML_TAG_START --><code class=\"language-undefined\">&#123;% include base/smart-image.html \n  path=&quot;posts/my-post-url&quot;\n  filename=&quot;my-image&quot;\n  alt=&quot;A sample image&quot;\n%&#125;</code><!-- HTML_TAG_END --></pre>\n</div>\n<p>My folder structure looks like this: </p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/web-images-modern-formats/folder-images.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/web-images-modern-formats/folder-images.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/web-images-modern-formats/folder-images.png\" alt=\"Screenshot showing the optimized files in their folder and comparing to the original one\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->Llamas are great<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h2 id=\"wrapping-up\">Wrapping Up<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#wrapping-up\"><span class=\"heading-link\">#</span></a></h2>\n<p>With such amazing results, it‚Äôs hard not to recommend you to optimize the images in your website ASAP. There sure are more approaches and optimizations that can be done besides the ones presented on this article, as the web world is always changing. But optimizations are a great way of showing respect to your users (as well as gathering more of them). Your site loads more quickly, and it uses less data and resources.</p>\n<p>As front-end developers, we must acknowledge that all we write runs on someone else‚Äôs computer, the user‚Äôs. So it is important that we respect them and make sure we just use the resources we need to.</p>\n<p>I hope you enjoyed reading this! Take care and happy coding!</p>","css":{"code":".code-block.svelte-qgch0c.svelte-qgch0c{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--card-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-qgch0c pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-qgch0c pre::-webkit-scrollbar{height:8px}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-qgch0c .lang.svelte-qgch0c{position:absolute;right:0;top:-15px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em}.code-block.svelte-qgch0c .filename.svelte-qgch0c{background:inherit;border-top-left-radius:8px;border-top-right-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-15px;z-index:1}\npicture.svelte-1gy5t1o.svelte-1gy5t1o{position:relative;width:100%;height:100%}picture.svelte-1gy5t1o img.svelte-1gy5t1o{width:100%;height:100%}\n.wrapper.svelte-1sgfl7c{background:var(--highlight-marker-url)}","map":null},"head":"","readingTime":"14 min read"},{"slug":"fixing-favicons","title":"How to fix your Favicons","date":"2021-01-06T00:00:00.000Z","excerpt":"Favicons suck. Luckily, there are ways to make them suck less.","tags":["Front-End","Guide","Favicon"],"html":"<p>Favicons kinda suck. They should be a simple icon that identifies your webpage on a bunch of scenarios, i.e. the icon displayed on the tab besides your website‚Äôs title, or the icon on the mobile browser‚Äôs bookmarks screen, or the icon on the phone‚Äôs home screen.</p>\n<p>Unfortunately, different browsers, OSs, and implementations throughout the years have ended up with many different files and meta tags, that we as developers need to handle otherwise we end up with missing or pixelated icons.</p>\n<h2 id=\"easy-mode\">Easy Mode<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#easy-mode\"><span class=\"heading-link\">#</span></a></h2>\n<p>I recently met my new best friend, <a href=\"https://realfavicongenerator.net/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Real Favicon Generator</a>. It took all these pains I just wrote about and just made it a breeze to handle. Best of all, it‚Äôs customizable!</p>\n<p>You just have to add in your existing favicon image (for best results, a SVG or high-quality PNG are recommended). From then on, the generator will display previews and allow customization of each category of favicon it will generate:</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/fixing-favicons/favicon-generator-customization.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/fixing-favicons/favicon-generator-customization.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/fixing-favicons/favicon-generator-customization.png\" alt=\"Screenshot of Real Favicon Generator's customization\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->The customization options allow you to set different icons depending on device and OS, and even generate icons with background colors if needed.<!-- HTML_TAG_END --></figcaption>\n</picture>\n<p>At the bottom, you can even set up ways of avoiding caching issues, compression, and scaling algorithms (!). After all that, it will generate them all as set, give you a zip with all the files, and the HTML code to paste on your <code>&lt;head&gt;</code>. You can check the result on this very website (fantinel.dev). The favicon should look fantastic on every device/browser combination.</p>\n<h2 id=\"manual-mode\">Manual Mode<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#manual-mode\"><span class=\"heading-link\">#</span></a></h2>\n<p>So, there are 5 types of favicons that we need to add, if we want to support every current browser:</p>\n<h3 id=\"1-desktop-browsers\">1. Desktop browsers<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#1-desktop-browsers\"><span class=\"heading-link\">#</span></a></h3>\n<ul><li>`favicon.ico`, for IE and any other legacy browsers. Optional if you don&#39;t want to support it;</li>\n  <li>`favicon-16x16.png`, the classic one that displays on the tabs;</li>\n  <li>`favicon-32x32.png`, used on Safari for macOS.</li></ul>\n<h3 id=\"2-android-browsers\">2. Android browsers<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#2-android-browsers\"><span class=\"heading-link\">#</span></a></h3>\n<ul><li>`android-chrome-192x192.png`, shown on the tab card and when added to home screen;</li>\n  <li>`android-chrome-512x512.png`, shown on the splash screen for when the website is installed to the phone. Optional if it&#39;s not a PWA;</li></ul>\n<h3 id=\"3-ios-safari-and-some-android-browsers-like-samsung-internet\">3. iOS Safari, and some Android browsers like Samsung Internet<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#3-ios-safari-and-some-android-browsers-like-samsung-internet\"><span class=\"heading-link\">#</span></a></h3>\n<ul><li>`apple-touch-icon.png`, a 180x180 file displayed when the website is added to home screen;</li></ul>\n<h3 id=\"4-windows-810-start-menu-optional\">4. Windows 8/10 start menu (optional)<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#4-windows-810-start-menu-optional\"><span class=\"heading-link\">#</span></a></h3>\n<ul><li>`mstile-150x150.png`, only used when your website is added to the start menu as a tile on Windows 8/10, and when not declared, defaults to `apple-touch-icon.png` instead.</li></ul>\n<h3 id=\"5-macos-safari-pinned-tabs-optional\">5. macOS Safari Pinned Tabs (optional)<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#5-macos-safari-pinned-tabs-optional\"><span class=\"heading-link\">#</span></a></h3>\n<ul><li>`safari-pinned-tab.svg` is used when users pin a tab on Safari for macOS. Basically, you declare a monochrome SVG and a theme color. Safari does the rest.</li></ul>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/fixing-favicons/safari-pinned-tabs-demo.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/fixing-favicons/safari-pinned-tabs-demo.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/fixing-favicons/safari-pinned-tabs-demo.png\" alt=\"Demo of Safari pinned tabs favicon behavior\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n  \n    <figcaption><!-- HTML_TAG_START -->How Safari pinned tab favicon works, screenshot of realfavicongenerator.net<!-- HTML_TAG_END --></figcaption>\n</picture>\n<p>With those files, you should be good to go on every single browser, by adding this to your <code>&lt;head&gt;</code>:</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">html</div>\n\t<pre class=\"language-html\"><!-- HTML_TAG_START --><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>apple-touch-icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>180x180<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/apple-touch-icon.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>32x32<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/favicon-32x32.png<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sizes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>16x16<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/favicon-16x16.png?<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>manifest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/site.webmanifest<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mask-icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/safari-pinned-tab.svg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>#000000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shortcut icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/favicon.ico<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code><!-- HTML_TAG_END --></pre>\n</div>\n<h2 id=\"single-svg-favicon\">Single SVG Favicon<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#single-svg-favicon\"><span class=\"heading-link\">#</span></a></h2>\n<p>Something that‚Äôs starting to become a thing is having a single SVG favicon. Theoretically, SVGs are infinitely scalable, and should look good on all sizes. Unfortunately, browser support is not there yet.</p>\n<p><a href=\"https://caniuse.com/link-icon-svg\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Can I Use</a> reports that, currently (January 2021), only recent versions of Firefox and Chromium-based browsers support this feature. This means that Safari, non-Chromium Edge, IE, and some mobile browsers do not support it. Therefore, unless you want your favicon to just not appear in those browsers, you‚Äôd still have to use other file formats as well. The downside of this approach is that all favicons would look the same, and you won‚Äôt be able to customize and have differently-shaped icons for mobile devices, for example.</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">html</div>\n\t<pre class=\"language-html\"><!-- HTML_TAG_START --><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>favicon.svg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code><!-- HTML_TAG_END --></pre>\n</div>\n<h2 id=\"wrapping-up\">Wrapping Up<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#wrapping-up\"><span class=\"heading-link\">#</span></a></h2>\n<p>Favicons suck. Luckily, there are people working to make it suck less. With the approach presented on this article, your website should be able to display its best favicon on all browsers for years to come.</p>","css":{"code":"picture.svelte-1gy5t1o.svelte-1gy5t1o{position:relative;width:100%;height:100%}picture.svelte-1gy5t1o img.svelte-1gy5t1o{width:100%;height:100%}\n.code-block.svelte-qgch0c.svelte-qgch0c{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--card-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-qgch0c pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-qgch0c pre::-webkit-scrollbar{height:8px}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-qgch0c .lang.svelte-qgch0c{position:absolute;right:0;top:-15px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em}.code-block.svelte-qgch0c .filename.svelte-qgch0c{background:inherit;border-top-left-radius:8px;border-top-right-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-15px;z-index:1}","map":null},"head":"","readingTime":"6 min read"},{"slug":"css-scroll-snapping","title":"CSS Scroll Snapping - Improve Scrolling without JS","date":"2020-08-03T00:00:00.000Z","excerpt":"Learn how to snap scrolling positions with CSS only.","tags":["Front-End","CSS","Guide"],"html":"<p>CSS is evolving constantly and the past few years have brought us amazing stuff. It is getting easier to make smooth and complete experiences without having to use JavaScript at all. Case in point: Scroll Snapping.</p>\n<p>It is an easy way to guarantee that users will scroll to the correct portion of your page or of a container. Picture a landing page that is easily swipable/scrollable between sections, or swipable cards. Take in mind how Android‚Äôs Recent Apps screen works, for example:</p>\n<p><img src=\"/images/posts/css-scroll-snapping/android-scroll-snapping.gif\" alt=\"Android's Recent Apps screen has scroll mapping between app cards\"></p>\n<p>You can see that Android never allows the end of a scroll to be in a place between cards. There‚Äôs a certain threshold that determines that the scroll will snap into the nearest card and put it in the center. All that while still keeping scrolling momentum, allowing you to go from one edge of the list to another in a single scroll if you want to.</p>\n<p>Until recently, you‚Äôd have to resort to JavaScript code to make a similar behavior on the web. But now, all you need is CSS, which makes things more performant, consistent and reliable! Browser support is already pretty good, with all major browser engines already supporting it fully. Check out browser support on <a href=\"https://caniuse.com/#feat=css-snappoints\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">caniuse.com</a>.</p>\n<p>I‚Äôve recently added scroll snapping to my own website. You can check it out on the ‚ÄúWork Experience‚Äù section in the <a href=\"https://fantinel.dev\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Home page</a>. It‚Äôs specially great on mobile!</p>\n<h2 id=\"how\">How?<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#how\"><span class=\"heading-link\">#</span></a></h2>\n<p>There are two main CSS properties that make the magic happen, one for the parent element, and one for its children.</p>\n<div class=\"code-block svelte-qgch0c\">\n\t<div class=\"lang svelte-qgch0c\">css</div>\n\t<pre class=\"language-css\"><!-- HTML_TAG_START --><code class=\"language-css\"><span class=\"token selector\">.parent</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">scroll-snap-type</span><span class=\"token punctuation\">:</span> y mandatory<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token selector\">.child</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">scroll-snap-align</span><span class=\"token punctuation\">:</span> start<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code><!-- HTML_TAG_END --></pre>\n</div>\n<h3 id=\"scroll-snap-type\">scroll-snap-type<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scroll-snap-type\"><span class=\"heading-link\">#</span></a></h3>\n<p>This property tells the browser that the parent element uses scroll snapping. We are given some options on how snapping must work. <code>y</code> indicates that the scroll happens vertically, while <code>x</code> means horizontally. We can also pass the <code>mandatory</code> and <code>proximity</code> options. </p>\n<p>We use <code>mandatory</code> to tell that the browser <em>must</em> snap to a snap point when the user stops scrolling. This means that if the next snap point becomes visible on the screen and scrolling stops, the browser will automatically snap to the next one. In the other end, with <code>proximity</code>, things are less strict. The browser will only snap to the next snap point if scrolling gets past a certain threshold. Both values are useful, their use will depend on the situation you‚Äôre applying it to.</p>\n<iframe height=\"500\" style=\"width: 100%;\" scrolling=\"no\" title=\"scroll-snap-type: Mandatory vs Proximity\" src=\"https://codepen.io/matfantinel/embed/preview/LYNPdpE?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">See the Pen <a href=\"https://codepen.io/matfantinel/pen/LYNPdpE\">scroll-snap-type: Mandatory vs Proximity</a> by Matheus Fantinel (<a href=\"https://codepen.io/matfantinel\">@matfantinel</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<h3 id=\"scroll-snap-align\">scroll-snap-align<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scroll-snap-align\"><span class=\"heading-link\">#</span></a></h3>\n<p>This is a property you add to the children that specifies where the snap points will be in the element. Which means that, whenever the browser automatically snaps the scroll to the element, it will either go to the left/top edge (<code>start</code>), center (<code>center</code>), or right/bottom edge (<code>end</code>) of the element. This property pretty much only makes a difference if the children are bigger than the parent‚Äôs display size.</p>\n<h3 id=\"scroll-padding-and-scroll-margin\">scroll-padding and scroll-margin<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#scroll-padding-and-scroll-margin\"><span class=\"heading-link\">#</span></a></h3>\n<p>To make things even better, we can use the <code>scroll-padding</code> (for parent) and <code>scroll-margin</code> (for children) properties. They add some space before/after the elements that are only considered when scrolling. The best way to implement them is by trying it out after you build your scroll snapping goodiness.</p>\n<p>You can check the documentation over on <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Mozilla Developer Network</a> for more info.</p>\n<h2 id=\"wrapping-up\">Wrapping Up<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#wrapping-up\"><span class=\"heading-link\">#</span></a></h2>\n<p>Scroll snapping is a sign that the web is maturing. For years we‚Äôve been bloating websites with a lot of JavaScript for very simple visual tasks, and now CSS is slowly evolving to take some space back. It‚Äôs an important evolution because Web technologies are being used to build every kind of application, and its native feature set needs to be good enough to compete with native or native-ish counterparts like Flutter, Swift, or Kotlin.</p>\n<p>Thanks for reading!</p>","css":{"code":".code-block.svelte-qgch0c.svelte-qgch0c{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--card-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-qgch0c pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-qgch0c pre::-webkit-scrollbar{height:8px}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-qgch0c pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-qgch0c .lang.svelte-qgch0c{position:absolute;right:0;top:-15px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em}.code-block.svelte-qgch0c .filename.svelte-qgch0c{background:inherit;border-top-left-radius:8px;border-top-right-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-15px;z-index:1}","map":null},"head":"","readingTime":"4 min read"}]}